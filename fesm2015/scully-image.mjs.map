{"version":3,"file":"scully-image.mjs","sources":["../../../projects/scully-image/src/lib/visibility.service.ts","../../../projects/scully-image/src/lib/scully-image.component.ts","../../../projects/scully-image/src/lib/scully-image.module.ts","../../../projects/scully-image/src/public-api.ts","../../../projects/scully-image/src/scully-image.ts"],"sourcesContent":["import { Injectable, Inject, ElementRef } from '@angular/core';\nimport {\n  Observable,\n  concat,\n  defer,\n  of,\n  fromEvent,\n  combineLatest,\n  ObservableInput,\n} from 'rxjs';\nimport { map, flatMap, distinctUntilChanged } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n@Injectable()\nexport class VisibilityService {\n  private pageVisible$: Observable<boolean>;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this.pageVisible$ = concat(\n      defer(() => of(!document.hidden)),\n      fromEvent(document, 'visibilitychange').pipe(map((e) => !document.hidden))\n    );\n  }\n\n  elementInSight(element: ElementRef): Observable<boolean> {\n    const elementVisible$ = Observable.create((observer) => {\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        observer.next(entries);\n      });\n\n      intersectionObserver.observe(element.nativeElement);\n\n      return () => {\n        intersectionObserver.disconnect();\n      };\n    }).pipe(\n      flatMap((entries: ObservableInput<any>) => entries),\n      map((entry: any) => entry.isIntersecting),\n      distinctUntilChanged()\n    );\n\n    const elementInSight$ = combineLatest(\n      this.pageVisible$,\n      elementVisible$,\n      (pageVisible, elementVisible) => pageVisible && elementVisible\n    ).pipe(distinctUntilChanged()) as Observable<boolean>;\n\n    return elementInSight$;\n  }\n}\n","import { VisibilityService } from './visibility.service';\nimport {\n  Component,\n  OnInit,\n  Input,\n  OnChanges,\n  HostBinding,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  isScullyRunning,\n  isScullyGenerated,\n  TransferStateService,\n} from '@scullyio/ng-lib';\nimport { interval, combineLatest, of, Subscription } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nexport enum PreloaderTypes {\n  blur = 'blur',\n  tracedSVG = 'tracedSVG',\n  primitives = 'primitives',\n  pixels = 'pixels',\n}\n\nconst FULL = 'full';\n\nexport interface blurOptions {\n  width: number;\n}\n\nexport type PrimitivesShapes =\n  | 'triangle'\n  | 'ellipse'\n  | 'rotated-ellipse'\n  | 'rectangle'\n  | 'rotatedRectangle'\n  | 'random';\n\nexport interface primitivesOptions {\n  numSteps?: number; // 1 - 1000, default 200\n  minEnergy?: number; // 0-1\n  shapeAlpha?: number; //  0-255 default 128\n  shapeType?: PrimitivesShapes; // default triangle\n  numCandidates?: number; // 1-32, default 1\n  numCandidateShapes?: number; // 10-1000, 50\n  numCandidateMutations?: number; // 10-500, 100\n  numCandidateExtras?: number; // 0-16, 0\n}\n\nexport interface tracedOptions {\n  turnPolicy?: tracedTurnPolicies;\n  turdSize?: number;\n  alphaMax?: number;\n  optCurve?: boolean;\n  optTolerance?: number;\n  threshold?: number;\n  blackOnWhite?: boolean;\n  color?: string;\n  background?: string;\n}\n\nexport type tracedTurnPolicies =\n  | 'black'\n  | 'white'\n  | 'left'\n  | 'right'\n  | 'minority'\n  | 'majority';\n\nexport interface pixelsOptions {\n  width?: number;\n  pixelSize?: number;\n}\n\nexport const SCULLY_IMAGE_URL_MAP = 'scullyImageUrlMap';\n\nconst template = `\n<img\n  [style.height]=\"getHeight()\"\n  [style.width]=\"getWidth()\"\n  [class.blurred]=\"preloader === PreloaderTypes.blur && !imageLoaded\"\n  [class.loaded]=\"imageLoaded\"\n  class=\"preloaded-image\"\n  data-scully-image=\"something\"\n  [src]=\"preloadedSrc\"\n/>\n<img\n  [style.height]=\"getHeight()\"\n  [style.width]=\"getWidth()\"\n  [class.blurred]=\"preloader === PreloaderTypes.blur && !imageLoaded\"\n  [class.loaded]=\"imageLoaded\"\n  class=\"preloaded-image-fade-hack\"\n  data-scully-image=\"something\"\n  [src]=\"preloadedSrc\"\n/>\n<img\n  [style.height]=\"getHeight()\"\n  [style.width]=\"getWidth()\"\n  [class.loaded]=\"imageLoaded\"\n  class=\"loaded-image\"\n  [src]=\"loadedSrc\"\n  [class.blurred]=\"preloader === PreloaderTypes.blur && !imageLoaded\"\n/>\n`;\n\nconst componentStyles = `\n:host {\n  position: relative;\n  display: block;\n  overflow: hidden;\n}\n\n:host img {\n  transition: opacity 300ms, filter 300ms;\n  width: 100%;\n  height: auto;\n}\n\n:host .preloaded-image {\n  z-index: 3;\n  opacity: 1;\n}\n\n:host .preloaded-image.loaded {\n  opacity: 0;\n}\n\n:host .preloaded-image-fade-hack {\n  position: absolute;\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  z-index: 3;\n  opacity: 1;\n}\n\n:host .preloaded-image-fade-hack.loaded {\n  opacity: 0;\n}\n\n:host .loaded-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 2;\n  opacity: 0;\n}\n\n:host .loaded-image.loaded {\n  opacity: 1;\n}\n\n.blurred {\n  filter: blur(20px);\n}\n`;\n\n@Component({\n  selector: 'scully-image',\n  template,\n  styles: [componentStyles],\n})\nexport class ScullyImageComponent {\n  @Input()\n  src = '';\n\n  @Input()\n  pixelHeight: number;\n\n  @Input()\n  pixelWidth: number;\n\n  @Input()\n  fluidMaxWidth: number;\n\n  @Input()\n  fluidMaxHeight: number;\n\n  @Input()\n  lazy = true;\n\n  @Input()\n  pluginOptions:\n    | blurOptions\n    | primitivesOptions\n    | tracedOptions\n    | pixelsOptions = {};\n\n  @Input()\n  preloader = PreloaderTypes.blur;\n\n  PreloaderTypes = PreloaderTypes;\n\n  getHeight() {\n    if (this.pixelHeight) {\n      return this.pixelHeight + 'px';\n    } else {\n      return 'auto';\n    }\n  }\n\n  getWidth() {\n    if (this.pixelWidth) {\n      return this.pixelWidth + 'px';\n    } else {\n      return '100%';\n    }\n  }\n\n  @HostBinding('style.height')\n  get height() {\n    return this.getHeight();\n  }\n\n  @HostBinding('style.width')\n  get width() {\n    return this.getWidth();\n  }\n\n  @HostBinding('attr.data-pixel-width')\n  get pixelWidthAsAttr() {\n    return this.pixelWidth;\n  }\n\n  @HostBinding('attr.data-pixel-height')\n  get pixelHeightAsAttr() {\n    return this.pixelHeight;\n  }\n\n  @HostBinding('attr.data-fluid-max-width')\n  get fluidMaxWidthAsAttr() {\n    return this.fluidMaxWidth;\n  }\n\n  @HostBinding('attr.data-fluid-max-height')\n  get fluidMaxHeightAsAttr() {\n    return this.fluidMaxHeight;\n  }\n\n  imageLoaded = false;\n  scullyImageUrlMap = {};\n  preloadedSrc: any = '';\n  loadedSrc = '';\n  elementInSight$: Subscription;\n\n  constructor(\n    private transferState: TransferStateService,\n    private sanitizer: DomSanitizer,\n    private visibilityService: VisibilityService,\n    private elementRef: ElementRef\n  ) {}\n\n  baseInit(): void {\n    if (isScullyGenerated()) {\n      console.log('scully is generated');\n\n      this.transferState\n        .getState(SCULLY_IMAGE_URL_MAP)\n        .subscribe((scullyImageUrlMap) => {\n          console.log('scullyImageUrlMap', { scullyImageUrlMap });\n          this.scullyImageUrlMap = scullyImageUrlMap;\n          console.log('pluginOptions', this.pluginOptions);\n          this.preloadedSrc =\n            scullyImageUrlMap[this.getImageKey(this.preloader)];\n          if (this.preloader === PreloaderTypes.primitives) {\n            this.preloadedSrc = this.sanitizer.bypassSecurityTrustResourceUrl(\n              this.preloadedSrc\n            );\n          } else if (this.preloader === PreloaderTypes.tracedSVG) {\n            this.preloadedSrc = this.sanitizer.bypassSecurityTrustResourceUrl(\n              this.preloadedSrc\n            );\n          } else if (this.preloader === PreloaderTypes.pixels) {\n            this.preloadedSrc = this.sanitizer.bypassSecurityTrustResourceUrl(\n              this.preloadedSrc\n            );\n          }\n          const fullSizeImageUrl =\n            scullyImageUrlMap[this.getImageKey(FULL)] || this.src;\n\n          if (this.lazy) {\n            this.elementInSight$ = combineLatest(\n              interval(2000),\n              this.visibilityService.elementInSight(this.elementRef),\n              (counter, visible) => visible\n            )\n              .pipe(\n                filter((visible: boolean) => visible),\n                take(1)\n              )\n              .subscribe(() => {\n                this.fetchImage(fullSizeImageUrl);\n              });\n          } else {\n            this.fetchImage(fullSizeImageUrl);\n          }\n        });\n    } else {\n      this.transferState.setState(SCULLY_IMAGE_URL_MAP, {});\n    }\n  }\n\n  fetchImage(fullSizeImageUrl) {\n    const imgElement = document.createElement('img');\n    imgElement.onload = () => {\n      setTimeout(() => {\n        console.log('image has been loaded');\n        this.loadedSrc = fullSizeImageUrl;\n        this.imageLoaded = true;\n      }, 300);\n    };\n    imgElement.src = fullSizeImageUrl;\n    this.loadedSrc = fullSizeImageUrl;\n  }\n\n  ngOnChanges(changes): void {\n    // if (changes.src && changes.src !== '') {\n    // }\n    // if (isScullyGenerated()) {\n    //   console.log('scully is generated');\n    //   this.getStateAsPromise();\n    // } else {\n    //   console.log('setting state', this.src);\n    //   this.transferState.setState('src', { src: this.src });\n    // }\n  }\n\n  baseOnDestroy() {\n    if (this.elementInSight$) {\n      this.elementInSight$.unsubscribe();\n    }\n  }\n\n  getImageKey(preloaderType = '') {\n    const key =\n      this.src +\n      preloaderType +\n      JSON.stringify(this.pluginOptions) +\n      (this.pixelHeight || 0) +\n      (this.pixelWidth || 0) +\n      (this.fluidMaxHeight || 0) +\n      (this.fluidMaxWidth || 0);\n    console.log({ key });\n    return key;\n  }\n}\n\n@Component({\n  selector: 'scully-blur-image',\n  template,\n  styles: [componentStyles],\n})\nexport class ScullyBlurImageComponent\n  extends ScullyImageComponent\n  implements OnInit, OnChanges, OnDestroy\n{\n  @Input()\n  preloader = PreloaderTypes.blur;\n\n  @HostBinding('style.height')\n  get height() {\n    return this.getHeight();\n  }\n\n  @HostBinding('style.width')\n  get width() {\n    return this.getWidth();\n  }\n\n  @HostBinding('attr.data-type')\n  get type() {\n    return this.preloader;\n  }\n\n  @HostBinding('attr.data-plugin-options')\n  get pluginOptionsAsString() {\n    return JSON.stringify(this.pluginOptions);\n  }\n\n  @HostBinding('attr.data-pixel-width')\n  get pixelWidthAsAttr() {\n    return this.pixelWidth;\n  }\n\n  @HostBinding('attr.data-pixel-height')\n  get pixelHeightAsAttr() {\n    return this.pixelHeight;\n  }\n\n  @HostBinding('attr.data-fluid-max-width')\n  get fluidMaxWidthAsAttr() {\n    return this.fluidMaxWidth;\n  }\n\n  @HostBinding('attr.data-fluid-max-height')\n  get fluidMaxHeightAsAttr() {\n    return this.fluidMaxHeight;\n  }\n\n  ngOnInit(): void {\n    this.baseInit();\n  }\n\n  ngOnDestroy() {\n    this.baseOnDestroy();\n  }\n}\n\n@Component({\n  selector: 'scully-traced-image',\n  template,\n  styles: [componentStyles],\n})\nexport class ScullyTracedImageComponent\n  extends ScullyImageComponent\n  implements OnInit, OnChanges, OnDestroy\n{\n  @Input()\n  preloader = PreloaderTypes.tracedSVG;\n\n  @HostBinding('style.height')\n  get height() {\n    return this.getHeight();\n  }\n\n  @HostBinding('style.width')\n  get width() {\n    return this.getWidth();\n  }\n\n  @HostBinding('attr.data-type')\n  get type() {\n    return this.preloader;\n  }\n\n  @HostBinding('attr.data-plugin-options')\n  get pluginOptionsAsString() {\n    return JSON.stringify(this.pluginOptions);\n  }\n\n  @HostBinding('attr.data-pixel-width')\n  get pixelWidthAsAttr() {\n    return this.pixelWidth;\n  }\n\n  @HostBinding('attr.data-pixel-height')\n  get pixelHeightAsAttr() {\n    return this.pixelHeight;\n  }\n\n  @HostBinding('attr.data-fluid-max-width')\n  get fluidMaxWidthAsAttr() {\n    return this.fluidMaxWidth;\n  }\n\n  @HostBinding('attr.data-fluid-max-height')\n  get fluidMaxHeightAsAttr() {\n    return this.fluidMaxHeight;\n  }\n\n  ngOnInit(): void {\n    this.baseInit();\n  }\n\n  ngOnDestroy() {\n    this.baseOnDestroy();\n  }\n}\n\n@Component({\n  selector: 'scully-primitives-image',\n  template,\n  styles: [componentStyles],\n})\nexport class ScullyPrimitivesImageComponent\n  extends ScullyImageComponent\n  implements OnInit, OnChanges, OnDestroy\n{\n  @Input()\n  preloader = PreloaderTypes.primitives;\n\n  @HostBinding('style.height')\n  get height() {\n    return this.getHeight();\n  }\n\n  @HostBinding('style.width')\n  get width() {\n    return this.getWidth();\n  }\n\n  @HostBinding('attr.data-type')\n  get type() {\n    return this.preloader;\n  }\n\n  @HostBinding('attr.data-plugin-options')\n  get pluginOptionsAsString() {\n    return JSON.stringify(this.pluginOptions);\n  }\n\n  @HostBinding('attr.data-pixel-width')\n  get pixelWidthAsAttr() {\n    return this.pixelWidth;\n  }\n\n  @HostBinding('attr.data-pixel-height')\n  get pixelHeightAsAttr() {\n    return this.pixelHeight;\n  }\n\n  @HostBinding('attr.data-fluid-max-width')\n  get fluidMaxWidthAsAttr() {\n    return this.fluidMaxWidth;\n  }\n\n  @HostBinding('attr.data-fluid-max-height')\n  get fluidMaxHeightAsAttr() {\n    return this.fluidMaxHeight;\n  }\n\n  ngOnInit(): void {\n    this.baseInit();\n  }\n\n  ngOnDestroy() {\n    this.baseOnDestroy();\n  }\n}\n\n@Component({\n  selector: 'scully-pixels-image',\n  template,\n  styles: [componentStyles],\n})\nexport class ScullyPixelsImageComponent\n  extends ScullyImageComponent\n  implements OnInit, OnChanges, OnDestroy\n{\n  @Input()\n  preloader = PreloaderTypes.pixels;\n\n  @HostBinding('style.height')\n  get height() {\n    return this.getHeight();\n  }\n\n  @HostBinding('style.width')\n  get width() {\n    return this.getWidth();\n  }\n\n  @HostBinding('attr.data-type')\n  get type() {\n    return this.preloader;\n  }\n\n  @HostBinding('attr.data-plugin-options')\n  get pluginOptionsAsString() {\n    return JSON.stringify(this.pluginOptions);\n  }\n\n  @HostBinding('attr.data-pixel-width')\n  get pixelWidthAsAttr() {\n    return this.pixelWidth;\n  }\n\n  @HostBinding('attr.data-pixel-height')\n  get pixelHeightAsAttr() {\n    return this.pixelHeight;\n  }\n\n  @HostBinding('attr.data-fluid-max-width')\n  get fluidMaxWidthAsAttr() {\n    return this.fluidMaxWidth;\n  }\n\n  @HostBinding('attr.data-fluid-max-height')\n  get fluidMaxHeightAsAttr() {\n    return this.fluidMaxHeight;\n  }\n\n  ngOnInit(): void {\n    this.baseInit();\n  }\n\n  ngOnDestroy() {\n    this.baseOnDestroy();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {\n  ScullyImageComponent,\n  ScullyBlurImageComponent,\n  ScullyTracedImageComponent,\n  ScullyPrimitivesImageComponent,\n  ScullyPixelsImageComponent,\n} from './scully-image.component';\nimport { VisibilityService } from './visibility.service';\n\nconst exportedComponents = [\n  ScullyBlurImageComponent,\n  ScullyTracedImageComponent,\n  ScullyPrimitivesImageComponent,\n  ScullyPixelsImageComponent,\n];\n\n@NgModule({\n  declarations: [ScullyImageComponent, ...exportedComponents],\n  imports: [HttpClientModule],\n  exports: [...exportedComponents],\n  providers: [VisibilityService],\n})\nexport class ScullyImageModule {}\n","/*\n * Public API Surface of scully-image\n */\n\nexport * from './lib/scully-image.component';\nexport * from './lib/scully-image.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}